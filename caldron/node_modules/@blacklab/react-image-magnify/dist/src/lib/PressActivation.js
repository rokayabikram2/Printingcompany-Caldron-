"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PressActivation = void 0;
const constants_1 = require("../constants");
const TouchEnvironmentActivation_1 = require("./TouchEnvironmentActivation");
class PressActivation extends TouchEnvironmentActivation_1.TouchEnvironmentActivation {
    constructor(options) {
        super({ onIsActiveChanged: options.onIsActiveChanged });
        this.pressDurationInMs = options.pressDurationInMs;
        this.pressMoveThreshold = options.pressMoveThreshold;
    }
    touchStarted(event) {
        this.initPressEventCriteria(event.position);
        this.setPressEventTimer();
    }
    touchMoved(event) {
        if (this.isActive) {
            return;
        }
        this.setPressEventCriteria(event.position);
    }
    setPressEventTimer() {
        this.timers.push({
            name: constants_1.PRESS_EVENT_TIMER_NAME,
            id: setTimeout(() => {
                if (Math.abs(this.currentElTop - this.initialElTop) < this.pressMoveThreshold) {
                    this.activate();
                }
            }, this.pressDurationInMs),
        });
    }
    setPressEventCriteria(position) {
        this.currentElTop = position.y;
    }
    initPressEventCriteria(position) {
        const top = position.y;
        this.initialElTop = top;
        this.currentElTop = top;
    }
}
exports.PressActivation = PressActivation;
//# sourceMappingURL=PressActivation.js.map