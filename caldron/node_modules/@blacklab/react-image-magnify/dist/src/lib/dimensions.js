"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEnlargedImageContainerDimension = exports.convertPercentageToDecimal = exports.isPercentageFormat = void 0;
function isPercentageFormat(val) {
    return (typeof val === 'string'
        && /^\d+%$/.test(val));
}
exports.isPercentageFormat = isPercentageFormat;
function convertPercentageToDecimal(percentage, denominator = 100) {
    const denom = typeof denominator === 'string' ? parseInt(denominator, 10) : denominator;
    return (typeof percentage === 'string' ? parseInt(percentage, 10) : percentage) / denom;
}
exports.convertPercentageToDecimal = convertPercentageToDecimal;
function getEnlargedImageContainerDimension(containerDimension, smallImageDimension, scale, isInPlaceMode) {
    var _a;
    if (isInPlaceMode) {
        return smallImageDimension;
    }
    if (scale) {
        if (scale <= 0 && ((_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a.NODE_ENV) !== 'production') {
            // eslint-disable-next-line no-console
            console.warn(`[ReactImageMagnify]
                Warning! "scale" cannot be 0 or less (found ${scale}). Defaulting to 0.5.
            `);
            // eslint-disable-next-line no-param-reassign
            scale = 0.5;
        }
        return (isPercentageFormat(smallImageDimension)
            ? convertPercentageToDecimal(smallImageDimension)
            : smallImageDimension)
            * scale;
    }
    if (isPercentageFormat(containerDimension)) {
        return isPercentageFormat(smallImageDimension)
            ? convertPercentageToDecimal(smallImageDimension, containerDimension)
            : smallImageDimension * convertPercentageToDecimal(containerDimension);
    }
    return containerDimension;
}
exports.getEnlargedImageContainerDimension = getEnlargedImageContainerDimension;
//# sourceMappingURL=dimensions.js.map