{"version":3,"file":"dimensions.js","sourceRoot":"","sources":["../../../src/lib/dimensions.ts"],"names":[],"mappings":";;;AAAA,SAAgB,kBAAkB,CAAC,GAAoB;IACnD,OAAO,CACH,OAAO,GAAG,KAAK,QAAQ;WACpB,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CACxB,CAAC;AACN,CAAC;AALD,gDAKC;AAED,SAAgB,0BAA0B,CAAC,UAA2B,EAAE,cAA+B,GAAG;IACtG,MAAM,KAAK,GAAG,OAAO,WAAW,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;IAExF,OAAO,CAAC,OAAO,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;AAC5F,CAAC;AAJD,gEAIC;AAED,SAAgB,kCAAkC,CAC9C,kBAAmC,EACnC,mBAAoC,EACpC,KAAyB,EACzB,aAAkC;;IAElC,IAAI,aAAa,EAAE;QACf,OAAO,mBAAmB,CAAC;KAC9B;IAED,IAAI,KAAK,EAAE;QACP,IAAI,KAAK,IAAI,CAAC,IAAI,CAAA,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,GAAG,0CAAE,QAAQ,MAAK,YAAY,EAAE;YACvD,sCAAsC;YACtC,OAAO,CAAC,IAAI,CAAC;8DACqC,KAAK;aACtD,CAAC,CAAC;YAEH,6CAA6C;YAC7C,KAAK,GAAG,GAAG,CAAC;SACf;QAED,OAAO,CAAC,kBAAkB,CAAC,mBAAmB,CAAC;YAC3C,CAAC,CAAC,0BAA0B,CAAC,mBAAmB,CAAC;YACjD,CAAC,CAAC,mBAA6B,CAAC;cAC9B,KAAK,CAAC;KACf;IAED,IAAI,kBAAkB,CAAC,kBAAkB,CAAC,EAAE;QACxC,OAAO,kBAAkB,CAAC,mBAAmB,CAAC;YAC1C,CAAC,CAAC,0BAA0B,CAAC,mBAAmB,EAAE,kBAAkB,CAAC;YACrE,CAAC,CAAC,mBAA6B,GAAG,0BAA0B,CAAC,kBAAkB,CAAC,CAAC;KACxF;IAED,OAAO,kBAA4B,CAAC;AACxC,CAAC;AAlCD,gFAkCC","sourcesContent":["export function isPercentageFormat(val: string | number): boolean {\n    return (\n        typeof val === 'string'\n        && /^\\d+%$/.test(val)\n    );\n}\n\nexport function convertPercentageToDecimal(percentage: string | number, denominator: string | number = 100): number {\n    const denom = typeof denominator === 'string' ? parseInt(denominator, 10) : denominator;\n\n    return (typeof percentage === 'string' ? parseInt(percentage, 10) : percentage) / denom;\n}\n\nexport function getEnlargedImageContainerDimension(\n    containerDimension: string | number,\n    smallImageDimension: string | number,\n    scale: number | undefined,\n    isInPlaceMode: boolean | undefined,\n): string | number {\n    if (isInPlaceMode) {\n        return smallImageDimension;\n    }\n\n    if (scale) {\n        if (scale <= 0 && process?.env?.NODE_ENV !== 'production') {\n            // eslint-disable-next-line no-console\n            console.warn(`[ReactImageMagnify]\n                Warning! \"scale\" cannot be 0 or less (found ${scale}). Defaulting to 0.5.\n            `);\n\n            // eslint-disable-next-line no-param-reassign\n            scale = 0.5;\n        }\n\n        return (isPercentageFormat(smallImageDimension)\n            ? convertPercentageToDecimal(smallImageDimension)\n            : smallImageDimension as number)\n            * scale;\n    }\n\n    if (isPercentageFormat(containerDimension)) {\n        return isPercentageFormat(smallImageDimension)\n            ? convertPercentageToDecimal(smallImageDimension, containerDimension)\n            : smallImageDimension as number * convertPercentageToDecimal(containerDimension);\n    }\n\n    return containerDimension as number;\n}\n"]}