{"version":3,"file":"useLazyRef.js","sourceRoot":"","sources":["../../../src/hooks/useLazyRef.ts"],"names":[],"mappings":";;;AAAA,iCAAiD;AAEjD,MAAM,OAAO,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC;AAEnC,MAAM,UAAU,GAAG,CAAQ,eAA4B,EAA2B,EAAE;IACvF,MAAM,OAAO,GAAG,IAAA,cAAM,EAAyB,OAAO,CAAC,CAAC;IAExD,IAAI,OAAO,CAAC,OAAO,KAAK,OAAO,EAAE;QAC7B,OAAO,CAAC,OAAO,GAAG,eAAe,EAAE,CAAC;KACvC;IAED,OAAO,OAAkC,CAAC;AAC9C,CAAC,CAAC;AARW,QAAA,UAAU,cAQrB","sourcesContent":["import { MutableRefObject, useRef } from 'react';\n\nconst noValue = Symbol('lazyRef.noValue');\n\nexport const useLazyRef = <Value>(getInitialValue: () => Value): MutableRefObject<Value> => {\n    const lazyRef = useRef<typeof noValue | Value>(noValue);\n\n    if (lazyRef.current === noValue) {\n        lazyRef.current = getInitialValue();\n    }\n\n    return lazyRef as MutableRefObject<Value>;\n};\n"]}