{"version":3,"file":"MagnifyContainerPortal.js","sourceRoot":"","sources":["../../src/MagnifyContainerPortal.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,iCAEe;AACf,6DAA6D;AAC7D,yCAAyC;AACzC,+CAAyC;AAGzC,yDAAwD;AACxD,mDAAkD;AAClD,8CAA8C;AAC9C,2CAA0E;AAO7D,QAAA,sBAAsB,GAAG,IAAA,kBAAU,EAA8B,CAAC,KAAgB,EAAE,GAAG,EAAe,EAAE;IACjH,MAAM,EACF,WAAW,GAAG,EAAE,KAEhB,KAAK,EADF,IAAI,UACP,KAAK,EAHH,eAGL,CAAQ,CAAC;IAEV,MAAM,EACF,SAAS,EACT,EAAE,EACF,KAAK,EACL,SAAS,GAAG,kCAAsB,CAAC,IAAI,EACvC,QAAQ,EACR,aAAa,EACb,UAAU,EACV,SAAS,GAAG,EAAE,EACd,gBAAgB,GAAG,CAAC,EACpB,cAAc,GAAG,CAAC,GACrB,GAAG,WAAW,CAAC;IAChB,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,IAAA,gBAAQ,EAAC,IAAI,CAAC,CAAC;IACzD,MAAM,MAAM,GAAG,IAAA,wBAAS,EAAE,GAA0C,CAAC,OAAO,EAAE,aAAa,EAAE;QACzF,SAAS,EAAG,SAAuB;QACnC,QAAQ;QACR,aAAa;QACb,SAAS,EAAE;YACP;gBACI,IAAI,EAAE,QAAQ;gBACd,OAAO,EAAE;oBACL,MAAM,EAAE,CAAC,cAAc,EAAE,gBAAgB,CAAC;iBAC7C;aACJ;YACD,GAAG,SAAS;SACf;KACJ,CAAC,CAAC;IACH,MAAM,MAAM,GAAG,IAAA,uBAAU,EAAS,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5E,MAAM,SAAS,GAAG,IAAA,uBAAU,EAAiB,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IAClF,MAAM,SAAS,GAAG,IAAA,mBAAW,EAAC,CAAC,IAAI,EAAE,EAAE;QACnC,IAAI,IAAI,KAAK,IAAI,EAAE;YACf,gBAAgB,CAAC,IAAI,CAAC,CAAC;SAC1B;IACL,CAAC,EAAE,EAAE,CAAC,CAAC;IACP,MAAM,EAAE,GAAG,SAAS,CAAC,OAAO,CAAC;IAE7B,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,GAAG,6BAAiB,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;IACvD,gEAAgE;IAEhE,IAAI,SAAS,EAAE;QACX,EAAE,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;IAED,IAAI,UAAU,EAAE;QACZ,EAAE,CAAC,YAAY,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;KAC/C;IAED,IAAA,iBAAS,EAAC,GAAG,EAAE;QACX,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAE9B,OAAO,GAAS,EAAE;YACd,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAClC,CAAC,CAAC;QACN,uDAAuD;IACvD,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,IAAA,wBAAY,EACf,8CACI,GAAG,EAAE,SAAS,EACd,KAAK,gCACD,MAAM,EAAE,GAAG,IACR,MAAM,CAAC,MAAM,CAAC,MAAM,GACpB,KAAK,KAER,MAAM,CAAC,UAAU,CAAC,MAAM,cAE5B,uBAAC,mCAAgB,kBAAC,gBAAgB,UAAK,IAAI,EAAI,IAC7C,EACN,EAAE,CACL,CAAC;AACN,CAAC,CAAC,CAAC","sourcesContent":["import {\n    ComponentProps, forwardRef, MutableRefObject, useCallback, useEffect, useState,\n} from 'react';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { createPortal } from 'react-dom';\nimport { usePopper } from 'react-popper';\nimport type { Placement } from '@popperjs/core';\n\nimport { MagnifyContainer } from 'src/MaginfyContainer';\nimport { useLazyRef } from 'src/hooks/useLazyRef';\n// import { styleToCssText } from 'src/utils';\nimport { DEFAULT_PORTAL_ID, MagnifiedImagePosition } from 'src/constants';\nimport type { PortalProps } from 'src/types';\n\nexport interface PropTypes extends ComponentProps<typeof MagnifyContainer> {\n    portalProps?: PortalProps;\n}\n\nexport const MagnifyContainerPortal = forwardRef<HTMLImageElement, PropTypes>((props: PropTypes, ref): JSX.Element => {\n    const {\n        portalProps = {},\n        ...rest\n    } = props;\n\n    const {\n        className,\n        id,\n        style,\n        placement = MagnifiedImagePosition.LEFT,\n        strategy,\n        onFirstUpdate,\n        dataTestId,\n        modifiers = [],\n        horizontalOffset = 0,\n        verticalOffset = 0,\n    } = portalProps;\n    const [popperElement, setPopperElement] = useState(null);\n    const popper = usePopper((ref as MutableRefObject<HTMLImageElement>).current, popperElement, {\n        placement: (placement as Placement),\n        strategy,\n        onFirstUpdate,\n        modifiers: [\n            {\n                name: 'offset',\n                options: {\n                    offset: [verticalOffset, horizontalOffset],\n                },\n            },\n            ...modifiers,\n        ],\n    });\n    const randId = useLazyRef<number>(() => (Math.floor(Math.random() * 9999)));\n    const portalRef = useLazyRef<HTMLDivElement>(() => document.createElement('div'));\n    const popperRef = useCallback((node) => {\n        if (node !== null) {\n            setPopperElement(node);\n        }\n    }, []);\n    const el = portalRef.current;\n\n    el.id = id || `${DEFAULT_PORTAL_ID}-${randId.current}`;\n    // el.style.cssText = styleToCssText({ zIndex: 101, ...style });\n\n    if (className) {\n        el.className = className;\n    }\n\n    if (dataTestId) {\n        el.setAttribute('data-test-id', dataTestId);\n    }\n\n    useEffect(() => {\n        document.body.appendChild(el);\n\n        return (): void => {\n            document.body.removeChild(el);\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return createPortal(\n        <div\n            ref={popperRef}\n            style={{\n                zIndex: 101,\n                ...popper.styles.popper,\n                ...style,\n            }}\n            {...popper.attributes.popper}\n        >\n            <MagnifyContainer isPortalRendered {...rest} />\n        </div>,\n        el,\n    );\n});\n"]}