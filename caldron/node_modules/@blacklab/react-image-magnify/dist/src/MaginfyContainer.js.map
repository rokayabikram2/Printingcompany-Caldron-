{"version":3,"file":"MaginfyContainer.js","sourceRoot":"","sources":["../../src/MaginfyContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    ComponentType,\n    HTMLProps,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\n\nimport {\n    getLensModeMagnifiedImageCoordinates,\n    getInPlaceMagnifiedImageCoordinates,\n} from 'src/lib/imageCoordinates';\nimport { noop } from 'src/utils';\nimport {\n    getMagnifyContainerStyle,\n    getMagnifiedImageStyle,\n    getMagnifiedImageTranslationStyle,\n    getTransitionActiveStyle,\n} from 'src/lib/styles';\nimport {\n    MagnifiedImageProps, Point, ContainerDimensions,\n} from 'src/types';\n\nexport interface PropTypes extends Omit<HTMLProps<HTMLDivElement>, 'ref'> {\n    containerDimensions: ContainerDimensions;\n    cursorOffset: Point;\n    fadeDurationInMs?: number;\n    imageComponent?: ComponentType<HTMLProps<HTMLImageElement>>;\n    imageProps: MagnifiedImageProps;\n    isActive?: boolean;\n    isLazyLoaded?: boolean;\n    isPortalRendered?: boolean;\n    inPlaceMode?: boolean;\n    isPositionOutside?: boolean;\n    position: Point;\n    sourceImageDimensions: ContainerDimensions;\n}\n\nexport const MagnifyContainer = (props: PropTypes): JSX.Element | null => {\n    const {\n        containerDimensions,\n        cursorOffset,\n        fadeDurationInMs = 0,\n        imageComponent: ImageComponent = 'img',\n        imageProps,\n        isActive,\n        isLazyLoaded = true,\n        inPlaceMode,\n        isPortalRendered,\n        isPositionOutside,\n        position,\n        sourceImageDimensions,\n        style,\n        ...rest\n    } = props;\n    const timersRef = useRef<number[]>([]);\n    const [isTransitionEntering, setIsTransitionEntering] = useState(false);\n    const [isTransitionActive, setIsTransitionActive] = useState(false);\n    const [isTransitionLeaving, setIsTransitionLeaving] = useState(false);\n    const [, setIsTransitionDone] = useState(false);\n\n    const isVisible = !isLazyLoaded || (\n        isLazyLoaded && (isTransitionEntering || isTransitionActive || isTransitionLeaving)\n    );\n\n    const imageCoordinates = inPlaceMode\n        ? getInPlaceMagnifiedImageCoordinates(\n            containerDimensions,\n            imageProps,\n            position,\n        )\n        : getLensModeMagnifiedImageCoordinates(\n            containerDimensions,\n            cursorOffset,\n            imageProps,\n            position,\n            sourceImageDimensions,\n        );\n\n    useEffect(() => (): void => timersRef.current?.forEach((timerId) => {\n        clearTimeout(timerId);\n    }), []);\n\n    useEffect(() => {\n        if (isActive && !isPositionOutside) {\n            setIsTransitionDone(false);\n            setIsTransitionEntering(true);\n\n            timersRef.current.push(window.setTimeout(() => {\n                setIsTransitionEntering(false);\n                setIsTransitionActive(true);\n            }, 0));\n        } else {\n            setIsTransitionLeaving(true);\n            setIsTransitionActive(false);\n\n            timersRef.current.push(window.setTimeout(() => {\n                setIsTransitionDone(true);\n                setIsTransitionLeaving(false);\n            }, fadeDurationInMs));\n        }\n    }, [fadeDurationInMs, isActive, isPositionOutside]);\n\n    const enlargedImageStyle = useMemo(() => getMagnifiedImageStyle(imageProps), [imageProps]);\n\n    const computedContainerStyle = {\n        overflow: 'hidden',\n        ...getMagnifyContainerStyle(\n            containerDimensions,\n            style,\n            fadeDurationInMs,\n        ),\n        ...getTransitionActiveStyle(isTransitionActive),\n    };\n\n    const computedImageStyle = {\n        ...enlargedImageStyle,\n        ...getMagnifiedImageTranslationStyle(imageCoordinates),\n    };\n\n    return isVisible ? (\n        <div\n            {...rest}\n            style={computedContainerStyle}\n        >\n            <ImageComponent\n                {...imageProps}\n                alt={imageProps.alt || ''}\n                style={computedImageStyle}\n                onError={imageProps.onError || noop}\n                onLoad={imageProps.onLoad || noop}\n            />\n        </div>\n    ) : null;\n};\n"]}