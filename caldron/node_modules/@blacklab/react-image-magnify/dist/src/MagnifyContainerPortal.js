"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MagnifyContainerPortal = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
// eslint-disable-next-line import/no-extraneous-dependencies
const react_dom_1 = require("react-dom");
const react_popper_1 = require("react-popper");
const MaginfyContainer_1 = require("./MaginfyContainer");
const useLazyRef_1 = require("./hooks/useLazyRef");
// import { styleToCssText } from 'src/utils';
const constants_1 = require("./constants");
exports.MagnifyContainerPortal = (0, react_1.forwardRef)((props, ref) => {
    const { portalProps = {} } = props, rest = __rest(props, ["portalProps"]);
    const { className, id, style, placement = constants_1.MagnifiedImagePosition.LEFT, strategy, onFirstUpdate, dataTestId, modifiers = [], horizontalOffset = 0, verticalOffset = 0, } = portalProps;
    const [popperElement, setPopperElement] = (0, react_1.useState)(null);
    const popper = (0, react_popper_1.usePopper)(ref.current, popperElement, {
        placement: placement,
        strategy,
        onFirstUpdate,
        modifiers: [
            {
                name: 'offset',
                options: {
                    offset: [verticalOffset, horizontalOffset],
                },
            },
            ...modifiers,
        ],
    });
    const randId = (0, useLazyRef_1.useLazyRef)(() => (Math.floor(Math.random() * 9999)));
    const portalRef = (0, useLazyRef_1.useLazyRef)(() => document.createElement('div'));
    const popperRef = (0, react_1.useCallback)((node) => {
        if (node !== null) {
            setPopperElement(node);
        }
    }, []);
    const el = portalRef.current;
    el.id = id || `${constants_1.DEFAULT_PORTAL_ID}-${randId.current}`;
    // el.style.cssText = styleToCssText({ zIndex: 101, ...style });
    if (className) {
        el.className = className;
    }
    if (dataTestId) {
        el.setAttribute('data-test-id', dataTestId);
    }
    (0, react_1.useEffect)(() => {
        document.body.appendChild(el);
        return () => {
            document.body.removeChild(el);
        };
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    return (0, react_dom_1.createPortal)((0, jsx_runtime_1.jsx)("div", Object.assign({ ref: popperRef, style: Object.assign(Object.assign({ zIndex: 101 }, popper.styles.popper), style) }, popper.attributes.popper, { children: (0, jsx_runtime_1.jsx)(MaginfyContainer_1.MagnifyContainer, Object.assign({ isPortalRendered: true }, rest)) })), el);
});
//# sourceMappingURL=MagnifyContainerPortal.js.map