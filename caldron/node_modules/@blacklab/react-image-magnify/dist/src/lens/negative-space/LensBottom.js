"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LensBottom = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const clamp_1 = require("../../lib/clamp");
const Lens_1 = require("./Lens");
exports.LensBottom = (0, react_1.forwardRef)((props, ref) => {
    const { cursorOffset, position, fadeDurationInMs, isActive, isPositionOutside, style: parentSpecifiedStyle } = props, rest = __rest(props, ["cursorOffset", "position", "fadeDurationInMs", "isActive", "isPositionOutside", "style"]);
    const typedRef = ref;
    if (!(typedRef === null || typedRef === void 0 ? void 0 : typedRef.current)) {
        return null;
    }
    const clearLensHeight = cursorOffset.y * 2;
    const computedHeight = typedRef.current.offsetHeight - position.y - cursorOffset.y;
    const maxHeight = typedRef.current.offsetHeight - clearLensHeight;
    const height = (0, clamp_1.clamp)(computedHeight, 0, maxHeight);
    const clearLensBottom = position.y + cursorOffset.y;
    const top = Math.max(clearLensBottom, clearLensHeight);
    const computedStyle = {
        height: `${height}px`,
        width: '100%',
        top: `${top}px`,
    };
    return ((0, jsx_runtime_1.jsx)(Lens_1.Lens, Object.assign({ fadeDurationInMs: fadeDurationInMs, isActive: isActive, isPositionOutside: isPositionOutside, style: Object.assign(Object.assign({}, parentSpecifiedStyle), computedStyle) }, rest)));
});
exports.LensBottom.displayName = 'LensBottom';
//# sourceMappingURL=LensBottom.js.map